CXX_STD = CXX14

# flags from autoconf
SPMD_CPPFLAGS = @SPMD_CPPFLAGS@
SPMD_LDFLAGS = @SPMD_LDFLAGS@
SLAP_LDFLAGS = @SLAP_LDFLAGS@

FLOAT_LIBS = @FLOAT_LIBS@
FLOAT_INCL = @FLOAT_INCL@

R_CPPFLAGS = @R_CPPFLAGS@

USE_GPU = @USE_GPU@
NVCC = @NVCC@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@



# set arch flags
PKG_LIBS_CPU = $(FLOAT_LDFLAGS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS)

PKG_LIBS_GPU = $(CUDA_LDFLAGS) -lcudart -lcublas -lcusolver -lnvidia-ml

PKG_CPPFLAGS_MPI = $(SPMD_CPPFLAGS)
PKG_CXXFLAGS_MPI = $(SPMD_CPPFLAGS)
PKG_LIBS_MPI = $(SLAP_LDFLAGS) $(SPMD_LDFLAGS)



# flags
PKG_CPPFLAGS = $(PKG_CPPFLAGS_MPI)
PKG_CXXFLAGS = $(PKG_CXXFLAGS_MPI) $(SHLIB_OPENMP_CXXFLAGS)



# libs and objects
CPU_OBJS = cpu-bindings.o
MPI_OBJS = mpi-bindings.o

ifeq "$(USE_GPU)" "TRUE"
PKG_LIBS = $(PKG_LIBS_MPI) $(PKG_LIBS_CPU) $(PKG_LIBS_GPU)
OBJECTS = $(CPU_OBJS) $(MPI_OBJS) gpu-bindings.o
else
PKG_LIBS = $(PKG_LIBS_MPI) $(PKG_LIBS_CPU)
OBJECTS = $(CPU_OBJS) $(MPI_OBJS) gpu-dummy-bindings.o
endif



# make
all: $(SHLIB)

ifeq "$(USE_GPU)" "TRUE"
%.o: %.cu
	$(NVCC) -DGPU -O2 -x cu -c -arch=sm_61 -Xcompiler "-fPIC $(FLOAT_INCL) $(R_CPPFLAGS) $(SPMD_CPPFLAGS)" $< -o $@
else
$(SHLIB): $(OBJECTS)
endif
