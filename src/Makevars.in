CXX_STD = CXX14

FML_CPPFLAGS = -I../inst/include/fml/src/

# flags from autoconf
USE_MPI = @USE_MPI@
SPMD_CPPFLAGS = @SPMD_CPPFLAGS@
SPMD_LDFLAGS = @SPMD_LDFLAGS@
SLAP_LDFLAGS = @SLAP_LDFLAGS@

FLOAT_LIBS = @FLOAT_LIBS@
FLOAT_INCL = @FLOAT_INCL@

R_CPPFLAGS = @R_CPPFLAGS@

USE_GPU = @USE_GPU@
NVCC = @NVCC@
CUDA_CFLAGS = @CUDA_CFLAGS@
CUDA_LDFLAGS = @CUDA_LDFLAGS@



# set arch flags
PKG_LIBS_CPU = $(FLOAT_LIBS) $(LAPACK_LIBS) $(BLAS_LIBS) $(FLIBS) $(SHLIB_OPENMP_CXXFLAGS)

PKG_LIBS_GPU = $(CUDA_LDFLAGS) -lcudart -lcublas -lcusolver -lcurand -lnvidia-ml

PKG_CPPFLAGS_MPI = $(SPMD_CPPFLAGS)
PKG_CXXFLAGS_MPI = $(SPMD_CPPFLAGS)
PKG_LIBS_MPI = $(SLAP_LDFLAGS) $(SPMD_LDFLAGS)



# flags
PKG_CPPFLAGS = $(FML_CPPFLAGS)
PKG_CXXFLAGS = $(SHLIB_OPENMP_CXXFLAGS)



# libs and objects
R_OBJS = fmlr-native.o
CPU_OBJS = copy-cpu.o cpumat.o cpuvec.o dimops-cpu.o linalg-cpu.o stats-cpu.o
PKG_LIBS = $(PKG_LIBS_CPU)

ifeq "$(USE_MPI)" "TRUE"
  PKG_CPPFLAGS += $(PKG_CPPFLAGS_MPI)
  PKG_CXXFLAGS += $(PKG_CXXFLAGS_MPI) 
  PKG_LIBS += $(PKG_LIBS_MPI)
  MPI_OBJS = copy-mpi.o dimops-mpi.o grid.o linalg-mpi.o mpimat.o stats-mpi.o
else
  MPI_OBJS = mpi-dummy-bindings.o
endif

ifeq "$(USE_GPU)" "TRUE"
  PKG_LIBS += $(PKG_LIBS_GPU)
  GPU_OBJS = card.o copy-gpu.o dimops-gpu.o gpumat.o gpuvec.o linalg-gpu.o stats-gpu.o
else
  GPU_OBJS = gpu-dummy-bindings.o
endif

OBJECTS = $(R_OBJS) $(CPU_OBJS) $(MPI_OBJS) $(GPU_OBJS)



# make
all: $(SHLIB)

ifeq "$(USE_GPU)" "TRUE"
%.o: %.cu
	$(NVCC) -DGPU -O2 -x cu -c -arch=sm_61 -Xcompiler "-fPIC $(FML_CPPFLAGS) $(FLOAT_INCL) $(R_CPPFLAGS) $(SPMD_CPPFLAGS)" $< -o $@
else
  $(SHLIB): $(OBJECTS)
endif



clean:
	rm -rf *.o *.so Makevars $(SHLIB) $(OBJECTS)
