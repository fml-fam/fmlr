% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gpuvec-interface.r
\name{gpuvec-class}
\alias{gpuvec-class}
\alias{gpuvecR6}
\title{gpuvec class}
\description{
Storage and methods for GPU vector data.
}
\details{
Data is held in an external pointer.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{gpuvecR6$new()}}
\item \href{#method-resize}{\code{gpuvecR6$resize()}}
\item \href{#method-inherit}{\code{gpuvecR6$inherit()}}
\item \href{#method-info}{\code{gpuvecR6$info()}}
\item \href{#method-print}{\code{gpuvecR6$print()}}
\item \href{#method-fill_zero}{\code{gpuvecR6$fill_zero()}}
\item \href{#method-fill_val}{\code{gpuvecR6$fill_val()}}
\item \href{#method-fill_linspace}{\code{gpuvecR6$fill_linspace()}}
\item \href{#method-scale}{\code{gpuvecR6$scale()}}
\item \href{#method-rev}{\code{gpuvecR6$rev()}}
\item \href{#method-size}{\code{gpuvecR6$size()}}
\item \href{#method-get_card}{\code{gpuvecR6$get_card()}}
\item \href{#method-data_ptr}{\code{gpuvecR6$data_ptr()}}
\item \href{#method-to_robj}{\code{gpuvecR6$to_robj()}}
\item \href{#method-from_robj}{\code{gpuvecR6$from_robj()}}
\item \href{#method-clone}{\code{gpuvecR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$new(card, size = 0, type = "double")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{card}}{A GPU card object; the return of \code{card()}. See \code{?card}.}

\item{\code{size}}{The length of the vector.}

\item{\code{type}}{Storage type for the vector. Should be one of 'int', 'float', or 'double'.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Class initializer. See also \code{?gpuvec}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resize"></a>}}
\subsection{Method \code{resize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$resize(size)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{size}}{The new length.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Change the length of the vector object.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-inherit"></a>}}
\subsection{Method \code{inherit()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$inherit(data)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{data}}{R vector.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Set the data in the gpuvec object to point to the array in 'data'. See
also \code{?as_gpuvec}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-info"></a>}}
\subsection{Method \code{info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$info()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Print one-line information about the vector.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$print(ndigits = 4)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ndigits}}{Number of decimal digits to print.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Print the data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_zero"></a>}}
\subsection{Method \code{fill_zero()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$fill_zero()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Fill all entries with zero.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_val"></a>}}
\subsection{Method \code{fill_val()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$fill_val(v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{Value to set all entries to.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill all entries with supplied value.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_linspace"></a>}}
\subsection{Method \code{fill_linspace()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$fill_linspace(start, stop)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start, stop}}{Beginning/end of the linear spacing.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill the vector (column-wise) with linearly-spaced values.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-scale"></a>}}
\subsection{Method \code{scale()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$scale(s)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{s}}{Value to scale all entries by.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Scale all entries by the supplied value.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rev"></a>}}
\subsection{Method \code{rev()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$rev()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Reverse rows.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-size"></a>}}
\subsection{Method \code{size()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$size()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns length of the vector.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_card"></a>}}
\subsection{Method \code{get_card()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$get_card()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the internal card object.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-data_ptr"></a>}}
\subsection{Method \code{data_ptr()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$data_ptr()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the external pointer data. For developers only.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_robj"></a>}}
\subsection{Method \code{to_robj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$to_robj()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns an R vector containing a copy of the class data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-from_robj"></a>}}
\subsection{Method \code{from_robj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$from_robj(robj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{robj}}{R vector.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Copies the values of the input to the class data. See also \code{?as_gpuvec}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{gpuvecR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
