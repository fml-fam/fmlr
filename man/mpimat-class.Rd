% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/mpimat.r
\name{mpimat-class}
\alias{mpimat-class}
\alias{mpimatR6}
\title{mpimat class}
\description{
Storage and methods for MPI matrix data.
}
\details{
Data is held in an external pointer.
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-new}{\code{mpimatR6$new()}}
\item \href{#method-resize}{\code{mpimatR6$resize()}}
\item \href{#method-dupe}{\code{mpimatR6$dupe()}}
\item \href{#method-info}{\code{mpimatR6$info()}}
\item \href{#method-print}{\code{mpimatR6$print()}}
\item \href{#method-fill_zero}{\code{mpimatR6$fill_zero()}}
\item \href{#method-fill_val}{\code{mpimatR6$fill_val()}}
\item \href{#method-fill_linspace}{\code{mpimatR6$fill_linspace()}}
\item \href{#method-fill_eye}{\code{mpimatR6$fill_eye()}}
\item \href{#method-fill_diag}{\code{mpimatR6$fill_diag()}}
\item \href{#method-fill_runif}{\code{mpimatR6$fill_runif()}}
\item \href{#method-fill_rnorm}{\code{mpimatR6$fill_rnorm()}}
\item \href{#method-diag}{\code{mpimatR6$diag()}}
\item \href{#method-antidiag}{\code{mpimatR6$antidiag()}}
\item \href{#method-scale}{\code{mpimatR6$scale()}}
\item \href{#method-rev_rows}{\code{mpimatR6$rev_rows()}}
\item \href{#method-rev_cols}{\code{mpimatR6$rev_cols()}}
\item \href{#method-get}{\code{mpimatR6$get()}}
\item \href{#method-set}{\code{mpimatR6$set()}}
\item \href{#method-get_row}{\code{mpimatR6$get_row()}}
\item \href{#method-get_col}{\code{mpimatR6$get_col()}}
\item \href{#method-dim}{\code{mpimatR6$dim()}}
\item \href{#method-nrows}{\code{mpimatR6$nrows()}}
\item \href{#method-ncols}{\code{mpimatR6$ncols()}}
\item \href{#method-ldim}{\code{mpimatR6$ldim()}}
\item \href{#method-nrows_local}{\code{mpimatR6$nrows_local()}}
\item \href{#method-ncols_local}{\code{mpimatR6$ncols_local()}}
\item \href{#method-bfdim}{\code{mpimatR6$bfdim()}}
\item \href{#method-bf_rows}{\code{mpimatR6$bf_rows()}}
\item \href{#method-bf_cols}{\code{mpimatR6$bf_cols()}}
\item \href{#method-get_grid}{\code{mpimatR6$get_grid()}}
\item \href{#method-data_ptr}{\code{mpimatR6$data_ptr()}}
\item \href{#method-get_type}{\code{mpimatR6$get_type()}}
\item \href{#method-get_type_str}{\code{mpimatR6$get_type_str()}}
\item \href{#method-to_robj}{\code{mpimatR6$to_robj()}}
\item \href{#method-from_robj}{\code{mpimatR6$from_robj()}}
\item \href{#method-clone}{\code{mpimatR6$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-new"></a>}}
\subsection{Method \code{new()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$new(
  grid,
  nrows = 0,
  ncols = 0,
  bf_rows = 16,
  bf_cols = 16,
  type = "double"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{grid}}{An MPI grid object; the return of \code{grid()}. See \code{?grid}.}

\item{\code{nrows, ncols}}{The dimension of the matrix.}

\item{\code{bf_rows, bf_cols}}{The blocking factor.}

\item{\code{type}}{Storage type for the matrix. Should be one of 'int', 'float', or 'double'.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Class initializer. See also \code{?mpimat}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-resize"></a>}}
\subsection{Method \code{resize()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$resize(nrows, ncols)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{nrows, ncols}}{The new dimension.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Change the dimension of the matrix object.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dupe"></a>}}
\subsection{Method \code{dupe()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$dupe()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Duplicate the matrix in a deep copy.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-info"></a>}}
\subsection{Method \code{info()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$info()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Print one-line information about the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-print"></a>}}
\subsection{Method \code{print()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$print(ndigits = 4)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{ndigits}}{Number of decimal digits to print.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Print the data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_zero"></a>}}
\subsection{Method \code{fill_zero()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_zero()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Fill all entries with zero.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_val"></a>}}
\subsection{Method \code{fill_val()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_val(v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{Value to set all entries to.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill all entries with supplied value.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_linspace"></a>}}
\subsection{Method \code{fill_linspace()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_linspace(start, stop)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{start, stop}}{Beginning/end of the linear spacing.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill the matrix (column-wise) with linearly-spaced values.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_eye"></a>}}
\subsection{Method \code{fill_eye()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_eye()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Fill diagonal values to 1 and non-diagonal values to 0.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_diag"></a>}}
\subsection{Method \code{fill_diag()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_diag(v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{A cpuvec object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Set diagonal entries of the matrix to those in the vector. If the vector
is smaller than the matrix diagonal, the vector will recycle until the
matrix diagonal is filled.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_runif"></a>}}
\subsection{Method \code{fill_runif()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_runif(seed, min = 0, max = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seed}}{Seed for the generator. Can be left blank.}

\item{\code{min, max}}{Parameters for the generator.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill the matrix with random unifmorm data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-fill_rnorm"></a>}}
\subsection{Method \code{fill_rnorm()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$fill_rnorm(seed, mean = 0, sd = 1)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{seed}}{Seed for the generator. Can be left blank.}

\item{\code{mean, sd}}{Parameters for the generator.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Fill the matrix with random normal data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-diag"></a>}}
\subsection{Method \code{diag()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$diag(v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{A cpuvec object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get diagonal entries of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-antidiag"></a>}}
\subsection{Method \code{antidiag()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$antidiag(v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{v}}{A cpuvec object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get anti-diagonal entries of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-scale"></a>}}
\subsection{Method \code{scale()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$scale(s)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{s}}{Value to scale all entries by.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Scale all entries by the supplied value.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rev_rows"></a>}}
\subsection{Method \code{rev_rows()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$rev_rows()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Reverse rows.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-rev_cols"></a>}}
\subsection{Method \code{rev_cols()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$rev_cols()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Reverse columns.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get"></a>}}
\subsection{Method \code{get()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get(i, j)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i, j}}{Indices (0-based).}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get element from the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-set"></a>}}
\subsection{Method \code{set()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$set(i, j, v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i, j}}{Indices (0-based).}

\item{\code{v}}{Value.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Set element of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_row"></a>}}
\subsection{Method \code{get_row()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get_row(i, v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{i}}{Index (0-based).}

\item{\code{v}}{A cpuvec object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get the specified row.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_col"></a>}}
\subsection{Method \code{get_col()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get_col(j, v)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{j}}{Index (0-based).}

\item{\code{v}}{A cpuvec object.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Get the specified column.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-dim"></a>}}
\subsection{Method \code{dim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$dim()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of rows and columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nrows"></a>}}
\subsection{Method \code{nrows()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$nrows()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of rows of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ncols"></a>}}
\subsection{Method \code{ncols()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$ncols()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ldim"></a>}}
\subsection{Method \code{ldim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$ldim()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of rows and columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-nrows_local"></a>}}
\subsection{Method \code{nrows_local()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$nrows_local()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-ncols_local"></a>}}
\subsection{Method \code{ncols_local()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$ncols_local()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bfdim"></a>}}
\subsection{Method \code{bfdim()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$bfdim()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of rows and columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bf_rows"></a>}}
\subsection{Method \code{bf_rows()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$bf_rows()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-bf_cols"></a>}}
\subsection{Method \code{bf_cols()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$bf_cols()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns number of columns of the matrix.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_grid"></a>}}
\subsection{Method \code{get_grid()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get_grid()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the internal grid object.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-data_ptr"></a>}}
\subsection{Method \code{data_ptr()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$data_ptr()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the external pointer data. For developers only.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_type"></a>}}
\subsection{Method \code{get_type()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get_type()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the integer code for the underlying storage type. For developers only.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-get_type_str"></a>}}
\subsection{Method \code{get_type_str()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$get_type_str()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns the string code for the underlying storage type. For developers only.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-to_robj"></a>}}
\subsection{Method \code{to_robj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$to_robj()}\if{html}{\out{</div>}}
}

\subsection{Details}{
Returns an R matrix containing a copy of the class data.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-from_robj"></a>}}
\subsection{Method \code{from_robj()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$from_robj(robj)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{robj}}{R matrix.}
}
\if{html}{\out{</div>}}
}
\subsection{Details}{
Copies the values of the input to the class data. See also \code{?as_mpimat}.
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-clone"></a>}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{mpimatR6$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
